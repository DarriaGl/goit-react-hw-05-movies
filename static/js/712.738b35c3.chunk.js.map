{"version":3,"file":"static/js/712.738b35c3.chunk.js","mappings":"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","sources":["components/List/List.jsx","components/MoviesItem/MovieItem.styled.jsx","components/MoviesItem/MoviesItem.jsx","components/Searchbar/Searchbar.styled.jsx","components/Searchbar/Searchbar.jsx","pages/Movies.jsx","services/Api.jsx"],"sourcesContent":["import React from 'react';\n\nconst List = ({ data, ItemComponent, className }) => {\n  return (\n    <ul className={className}>\n      {data.map(element => (\n        <ItemComponent key={element.id} element={element} />\n      ))}\n    </ul>\n  );\n};\nexport default List;\n","import styled from 'styled-components';\n\nexport const Item = styled.li`\n  width: 200px;\n  overflow: hidden;\n  border-radius: 10px;\n  scale: 1\n  transition: box-shadow 300ms cubic-bezier(0.4, 0, 0.2, 1);\n  :hover {\n    scale: 1.05;\n    box-shadow: 0px 0px 19px 3px #f0d24c;\n  }\n  margin-bottom: 10px;\n`;\n\nexport const Poster = styled.img`\n  height: 300px;\n  object-fit: cover;\n  object-position: center;\n  margin-bottom: 15px;\n  border-radius: 10px;\n`;\nexport const Title = styled.p`\n  width: 200px;\n  overflow: hidden;\n  margin-bottom: 10px;\n  padding-left: 15px;\n`;\n\nexport const VoteAverage = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 10px;\n  padding-left: 15px;\n`;\n","import { Link, useLocation } from 'react-router-dom';\nimport moviePoster from '../../images/photoshop-film-strip.jpg';\nimport { Item, Title, Poster, VoteAverage } from './MovieItem.styled';\nimport { BsFillStarFill } from 'react-icons/bs';\n\nconst MoviesItem = ({ element }) => {\n  const location = useLocation();\n  const src = element.poster_path\n    ? `https://image.tmdb.org/t/p/w342${element.poster_path}`\n    : moviePoster;\n\n  return (\n    <Item>\n      <Link to={`/movies/${element.id}`} state={{ from: location }}>\n        <Poster src={src} alt={`Poster for ${element.title}`} />\n        <Title>{element.title}</Title>\n\n        <VoteAverage>\n          <BsFillStarFill />\n          <p>{element.vote_average.toFixed(1)}</p>\n        </VoteAverage>\n      </Link>\n    </Item>\n  );\n};\n\nexport default MoviesItem;","import styled from 'styled-components';\n\nexport const Form = styled.form`\n  display: flex;\n  justify-content: center;\n  margin-bottom: 30px;\n`;\n\nexport const Input = styled.input`\n  width: 600px;\n  display: inline-block;\n  font: inherit;\n  font-size: 20px;\n  border: none;\n  border-radius: 10px 0 0 10px;\n  outline: none;\n  padding-left: 10px;\n  &::placeholder {\n    font: inherit;\n    font-size: 20px;\n    color: fff;\n  }\n`;\nexport const Button = styled.button`\n  display: inline-block;\n  width: 40px;\n  height: 40px;\n  border: none;\n  border-radius: 0 10px 10px 0;\n  background-size: 40%;\n  background-repeat: no-repeat;\n  background-position: center;\n  background-color: #f0d24c;\n  /* opacity: 0.6; */\n  /* transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1); */\n  cursor: pointer;\n  outline: none;\n  &:hover {\n    background-color: #d4e0e9;\n  }\n`;\n\nexport const BtnLabel = styled.span`\n  position: absolute;\n  width: 1px;\n  height: 1px;\n  padding: 0;\n  overflow: hidden;\n  clip: rect(0, 0, 0, 0);\n  white-space: nowrap;\n  clip-path: inset(50%);\n  border: 0;\n`;\n","import { useEffect } from 'react';\nimport { useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { Form, Input, Button, BtnLabel } from './Searchbar.styled';\nimport { BsSearch } from 'react-icons/bs';\nconst Searchbar = ({ onSetSearch }) => {\n  const [searchParams] = useSearchParams();\n  const searchMovie = searchParams.get('query');\n  const [search, setSearch] = useState(null);\n\n  useEffect(() => {\n    setSearch(searchMovie);\n  }, [searchMovie]);\n\n  const handleSearchChange = e => {\n    const queryValue = e.currentTarget.value;\n    queryValue !== '' ? setSearch(queryValue) : setSearch(null);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const query = e.currentTarget.elements.movie.value.toLowerCase();\n    if (query.trim() === '') {\n      return alert('Please enter a search query');\n    }\n    if (search) onSetSearch({ query: search });\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Input\n        name=\"movie\"\n        type=\"text\"\n        value={search ? search : ''}\n        autoComplete=\"off\"\n        autoFocus\n        placeholder=\"Search movies\"\n        onChange={handleSearchChange}\n      />\n      <Button>\n        <BsSearch />\n        <BtnLabel>Search</BtnLabel>\n      </Button>\n    </Form>\n  );\n};\n\nexport default Searchbar;\n","import MoviesItem from 'components/MoviesItem/MoviesItem';\nimport List from 'components/List/List';\nimport { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { fetchSearch } from 'services/Api';\nimport Searchbar from '../components/Searchbar/Searchbar';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [error, setError] = useState('');\n  const [loading, setLoading] = useState(false);\n\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query');\n\n  useEffect(() => {\n    if (query) {\n      if (error) {\n        setError(false);\n      }\n      setLoading(true);\n      const fetchSearchMovies = async () => {\n        try {\n          const searchMovies = await fetchSearch(query);\n          if (searchMovies.length === 0) {\n            throw new Error(\n              `There are no movies for the request of '${query}'`\n            );\n          } else {\n            setMovies(searchMovies);\n          }\n        } catch (error) {\n          setError(error.message);\n          console.log(error);\n        } finally {\n          setLoading(false);\n        }\n      };\n      fetchSearchMovies();\n    } else {\n      setMovies([]);\n    }\n  }, [error, query]);\n\n  return (\n    <>\n      <Searchbar onSetSearch={setSearchParams} />\n      {loading ? (\n        <p>loading...</p>\n      ) : error ? (\n        <p>{error}</p>\n      ) : (\n        <List\n          data={movies}\n          ItemComponent={MoviesItem}\n          className={'movie-list'}\n        />\n      )}\n    </>\n  );\n};\nexport default Movies;\n","const controller = new AbortController();\nconst signal = controller.signal;\n\nconst API_THEMOVIEDB_BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'api_key=dab7ec22bbd612f5b2269a078012fc2d';\n\nexport const fetchTrendingMovies = async () => {\n  return await fetch(\n    `${API_THEMOVIEDB_BASE_URL}/trending/movie/day?language=en-US&${API_KEY}`,\n    { signal }\n  )\n    .then(res => res.json())\n    .then(res => res.results);\n};\n\nexport const fetchSearch = async search => {\n  return await fetch(\n    `${API_THEMOVIEDB_BASE_URL}/search/movie?query=${search}&${API_KEY}`,\n    { signal }\n  )\n    .then(res => res.json())\n    .then(res => res.results);\n};\n\nexport const fetchDetailsMovie = async id => {\n  return await fetch(\n    `${API_THEMOVIEDB_BASE_URL}/movie/${id}?language=en-US&${API_KEY}`,\n    { signal }\n  )\n    .then(res => res.json())\n    .then(res => res);\n};\n\nexport const fetchCast = async id => {\n  return await fetch(\n    `${API_THEMOVIEDB_BASE_URL}/movie/${id}/credits?language=en-US&${API_KEY}`,\n    { signal }\n  )\n    .then(res => res.json())\n    .then(res => res.cast);\n};\n\nexport const fetchReviews = async id => {\n  return await fetch(\n    `${API_THEMOVIEDB_BASE_URL}/movie/${id}/reviews?language=en-US&${API_KEY}`,\n    { signal }\n  )\n    .then(res => res.json())\n    .then(res => res.results);\n};"],"names":["data","ItemComponent","className","map","element","id","Item","styled","Poster","Title","VoteAverage","location","useLocation","src","poster_path","moviePoster","to","state","from","alt","title","vote_average","toFixed","Form","Input","Button","BtnLabel","onSetSearch","useSearchParams","searchMovie","get","useState","search","setSearch","useEffect","onSubmit","e","preventDefault","currentTarget","elements","movie","value","toLowerCase","trim","alert","query","name","type","autoComplete","autoFocus","placeholder","onChange","queryValue","movies","setMovies","error","setError","loading","setLoading","searchParams","setSearchParams","fetchSearchMovies","fetchSearch","searchMovies","length","Error","message","console","log","List","MoviesItem","signal","AbortController","API_THEMOVIEDB_BASE_URL","API_KEY","fetchTrendingMovies","fetch","then","res","json","results","fetchDetailsMovie","fetchCast","cast","fetchReviews"],"sourceRoot":""}