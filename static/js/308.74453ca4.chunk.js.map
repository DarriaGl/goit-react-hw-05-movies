{"version":3,"file":"static/js/308.74453ca4.chunk.js","mappings":"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","sources":["components/MovieDetails/MovieDetails.styled.jsx","components/MovieDetails/MovieDetails.jsx","pages/MovieDetails.jsx","services/Api.jsx"],"sourcesContent":["import styled from '@emotion/styled';\nimport { NavLink } from 'react-router-dom';\n\nexport const Poster = styled.img`\n  width: 300px;\n  height: 400px;\n  object-fit: cover;\n  object-position: center;\n  margin-bottom: 15px;\n  border-radius: 10px;\n`;\nexport const VoteAverage = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 5px;\n  justify-content: flex-end;\n  margin-bottom: 15px;\n`;\n\nexport const Wrap = styled.div`\n  padding: 10px;\n  display: flex;\n  gap: 15px;\n  background-color: #aa9c66;\n`;\nexport const WrapInfo = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\nexport const WrapInformation = styled.div`\n  min-height: 320px;\n`;\nexport const Title = styled.h1`\n  text-align: center;\n`;\nexport const NavList = styled.ul`\n  display: flex;\n  align-items: flex-end;\n  gap: 5px;\n`;\n\nexport const TextTitle = styled.h2`\n  font-size: 20px;\n  margin-bottom: 15px;\n`;\n\nexport const Text = styled.p`\n  font-size: 16px;\n  margin-bottom: 35px;\n`;\nexport const Link = styled(NavLink)`\n  padding: 10px;\n  text-align: center;\n  text-transform: uppercase;\n  font-weight: 700;\n  background-color: #e8e1d1;\n  transform: scale(1);\n  min-width: 100px;\n  border-radius: 10px 10px 0 0;\n  &.active {\n    background-color: #6c7c74;\n    color: #fff;\n    font-size: 24px;\n  }\n`;\n\nexport const WrapCastReview = styled.div`\n  width: 495px;\n`;\n","import {\n  Poster,\n  VoteAverage,\n  Wrap,\n  WrapInfo,\n  WrapInformation,\n  NavList,\n  Title,\n  TextTitle,\n  Text,\n  Link,\n  WrapCastReview,\n} from './MovieDetails.styled';\nimport { Suspense } from 'react';\nimport { Outlet } from 'react-router-dom';\nimport moviePoster from '../../images/photoshop-film-strip.jpg';\nimport { BsFillStarFill } from 'react-icons/bs';\n\nconst MovieDetails = ({ movie }) => {\n  const src = movie.poster_path\n    ? `https://image.tmdb.org/t/p/w342${movie.poster_path}`\n    : moviePoster;\n\n  const title =\n    movie.release_date === '' ? (\n      <Title>{movie.title}</Title>\n    ) : (\n      <Title>\n        {movie.title} ({`${movie.release_date}`.split('-')[0]})\n      </Title>\n    );\n  const rating =\n    movie.vote_average & (movie.vote_average !== 0) ? (\n      <VoteAverage>\n        <BsFillStarFill color=\"#6d90a8\" />\n        <p>{movie.vote_average.toFixed(1)}</p>\n      </VoteAverage>\n    ) : null;\n\n  const overview =\n    movie && movie.overview && movie.overview.length > 0 ? (\n      <>\n        <TextTitle>Overview</TextTitle>\n        <Text>{movie.overview}</Text>\n      </>\n    ) : null;\n  const genres = movie.genres && movie.genres.length > 0 && (\n    <>\n      <TextTitle>Genres</TextTitle>{' '}\n      <Text>{movie.genres.map(genre => genre.name).join(', ')}</Text>\n    </>\n  );\n\n  return (\n    <>\n      <Wrap>\n        <Poster src={src} alt={`Poster for ${movie.title}`} />\n        <WrapInfo>\n          <WrapInformation>\n            {title}\n            {rating}\n            {overview}\n            {genres}\n          </WrapInformation>\n          <WrapCastReview>\n            <TextTitle>Information</TextTitle>\n            <NavList>\n              <li>\n                <Link to=\"cast\">Cast</Link>\n              </li>\n              <li>\n                <Link to=\"reviews\">Reviews</Link>\n              </li>\n            </NavList>\n            <Suspense fallback={<div>Loading...</div>}>\n              <Outlet />\n            </Suspense>\n          </WrapCastReview>\n        </WrapInfo>\n      </Wrap>\n    </>\n  );\n};\n\nexport default MovieDetails;\n","import Details from 'components/MovieDetails/MovieDetails';\nimport { useState, useEffect, useRef } from 'react';\nimport { Link, useLocation, useParams } from 'react-router-dom';\nimport { fetchDetailsMovie } from 'services/Api';\nimport { HiChevronDoubleLeft } from 'react-icons/hi2';\n\nconst MovieDetails = () => {\n  const [movie, setMovie] = useState(null);\n  const [error, setError] = useState('');\n  const [loading, setLoading] = useState(false);\n\n  const { movieId } = useParams();\n  const location = useLocation();\n  const backLinkLocotionState = useRef(location.state?.from ?? '/movies');\n\n  useEffect(() => {\n    if (error) {\n      setError(false);\n    }\n    setLoading(true);\n    const fetchSendMovie = async () => {\n      try {\n        const sendMovie = await fetchDetailsMovie(movieId);\n        if (sendMovie) {\n          setMovie(sendMovie);\n        }\n        if (sendMovie.success === false) {\n          throw new Error(`The resource you requested could not be found.`);\n        }\n      } catch (error) {\n        setError(error.message);\n        console.log(error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchSendMovie();\n  }, [error, movieId]);\n\n  return (\n    <div className=\"movie-details-page\">\n      <Link to={backLinkLocotionState.current} className=\"link-go-back\">\n        <HiChevronDoubleLeft />\n        go back\n      </Link>\n      {loading ? (\n        <p>loading...</p>\n      ) : error ? (\n        <p>{error}</p>\n      ) : (\n        movie && <Details movie={movie} />\n      )}\n    </div>\n  );\n};\n\nexport default MovieDetails;\n","const controller = new AbortController();\nconst signal = controller.signal;\n\nconst API_THEMOVIEDB_BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'api_key=dab7ec22bbd612f5b2269a078012fc2d';\n\nexport const fetchTrendingMovies = async () => {\n  return await fetch(\n    `${API_THEMOVIEDB_BASE_URL}/trending/movie/day?language=en-US&${API_KEY}`,\n    { signal }\n  )\n    .then(res => res.json())\n    .then(res => res.results);\n};\n\nexport const fetchSearch = async search => {\n  return await fetch(\n    `${API_THEMOVIEDB_BASE_URL}/search/movie?query=${search}&${API_KEY}`,\n    { signal }\n  )\n    .then(res => res.json())\n    .then(res => res.results);\n};\n\nexport const fetchDetailsMovie = async id => {\n  return await fetch(\n    `${API_THEMOVIEDB_BASE_URL}/movie/${id}?language=en-US&${API_KEY}`,\n    { signal }\n  )\n    .then(res => res.json())\n    .then(res => res);\n};\n\nexport const fetchCast = async id => {\n  return await fetch(\n    `${API_THEMOVIEDB_BASE_URL}/movie/${id}/credits?language=en-US&${API_KEY}`,\n    { signal }\n  )\n    .then(res => res.json())\n    .then(res => res.cast);\n};\n\nexport const fetchReviews = async id => {\n  return await fetch(\n    `${API_THEMOVIEDB_BASE_URL}/movie/${id}/reviews?language=en-US&${API_KEY}`,\n    { signal }\n  )\n    .then(res => res.json())\n    .then(res => res.results);\n};"],"names":["Poster","styled","VoteAverage","Wrap","WrapInfo","WrapInformation","Title","NavList","TextTitle","Text","Link","NavLink","WrapCastReview","movie","src","poster_path","moviePoster","title","release_date","split","rating","vote_average","color","toFixed","overview","length","genres","map","genre","name","join","alt","to","Suspense","fallback","useState","setMovie","error","setError","loading","setLoading","movieId","useParams","location","useLocation","backLinkLocotionState","useRef","state","from","useEffect","fetchSendMovie","fetchDetailsMovie","sendMovie","success","Error","message","console","log","className","current","signal","AbortController","API_THEMOVIEDB_BASE_URL","API_KEY","fetchTrendingMovies","fetch","then","res","json","results","fetchSearch","search","id","fetchCast","cast","fetchReviews"],"sourceRoot":""}